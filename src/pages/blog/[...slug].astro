---
import FormattedDate from '../../components/FormattedDate.astro'
import Layout from '../../layouts/Layout.astro'
import { type CollectionEntry, getCollection, render } from 'astro:content'

export const getStaticPaths = async () => {
	const allBlogs = await getCollection('blog')
	return allBlogs.map((post) => ({
		params: { slug: post.id },
		props: post
	}))
}

type Props = CollectionEntry<'blog'>

const post = Astro.props
const { Content } = await render(post)
---

<Layout title={post.data.title}>
	<article>
		<div class="mb-8">
			<h1 transition:name="post-heading" class="mb-2">
				{post.data.title}
			</h1>
			<div class="text-muted flex items-center gap-3 text-xs">
				<FormattedDate date={post.data.pubDate} />
				{
					post.data.updatedDate && (
						<span>
							Updated: <FormattedDate date={post.data.updatedDate} />
						</span>
					)
				}
			</div>
			<a
				class="link mt-1 block text-xs"
				href=`https://amanvarshney.hashnode.dev/${post.id}`
				target="_blank"
			>
				Read on Hashnode â†’
			</a>
		</div>

		<div class="article-content">
			<Content />
		</div>
	</article>

	<div class="mt-12 pt-4">
		<hr />
		<div class="pt-4">
			<script
				is:inline
				src="https://giscus.app/client.js"
				data-repo="AmanVarshney01/aman-varshney"
				data-repo-id="R_kgDOK2jPEQ"
				data-category="General"
				data-category-id="DIC_kwDOK2jPEc4CgTww"
				data-mapping="pathname"
				data-strict="0"
				data-reactions-enabled="1"
				data-emit-metadata="0"
				data-input-position="top"
				data-theme="preferred_color_scheme"
				data-lang="en"
				data-loading="lazy"
				crossorigin="anonymous"
				async></script>
		</div>
	</div>
</Layout>
