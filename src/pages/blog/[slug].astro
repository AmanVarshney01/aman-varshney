---
import { getCollection, type CollectionEntry } from 'astro:content'
import Layout from '../../layouts/Layout.astro'

export const getStaticPaths = async () => {
	const posts = await getCollection('posts')
	const paths = posts.map((post) => {
		return {
			params: { slug: post.slug },
			props: { post }
		}
	})
	return paths
}

type Props = {
	post: CollectionEntry<'posts'>
}

const { post } = Astro.props
const { Content } = await post.render()
---

<Layout title={post.data.title}>
	<div class="flex flex-col">
		<span>
			{post.data.date}
		</span>
		<h1 transition:name="post-name">
			{post.data.title}
		</h1>
		<a class="underline" href=`https://amanvarshney.hashnode.dev/${post.slug}` target="_blank"
			>Read on Hashnode</a
		>
	</div>
	<article class="w-full">
		<Content />
	</article>
	<section class="">
		<script
			src="https://giscus.app/client.js"
			data-repo="AmanVarshney01/aman-varshney"
			data-repo-id="R_kgDOK2jPEQ"
			data-category="General"
			data-category-id="DIC_kwDOK2jPEc4CgTww"
			data-mapping="pathname"
			data-strict="0"
			data-reactions-enabled="1"
			data-emit-metadata="0"
			data-input-position="top"
			data-theme="noborder_dark"
			data-lang="en"
			data-loading="lazy"
			crossorigin="anonymous"
			async></script>
	</section>
</Layout>

<script is:inline>
	var theme = localStorage.getItem('theme') == null ? 'noborder_dark' : 'noborder_light'

	document
		.querySelector('script[src="https://giscus.app/client.js"]')
		.setAttribute('data-theme', theme)
</script>
