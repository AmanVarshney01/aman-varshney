---
import Layout from '@/layouts/Layout.astro'
import { getCollection, render } from 'astro:content'

export const getStaticPaths = async () => {
	const allBlogs = await getCollection('blog')
	return allBlogs.map((blog) => ({
		params: { slug: blog.id },
		props: { blog }
	}))
}

const { blog } = Astro.props
const { Content, headings } = await render(blog)
---

<Layout title={blog.data.title}>
	<div class="flex flex-col">
		<h1 transition:name="blog-heading" class="mb-0 pb-2">
			{blog.data.title}
		</h1>
		<span class="pb-4">
			{blog.data.date}
		</span>
		<a class="link" href=`https://amanvarshney.hashnode.dev/${blog.id}` target="_blank"
			>Read on Hashnode</a
		>
	</div>
	<article>
		<Content />
	</article>
	<div class="pt-8">
		<script
			is:inline
			src="https://giscus.app/client.js"
			data-repo="AmanVarshney01/aman-varshney"
			data-repo-id="R_kgDOK2jPEQ"
			data-category="General"
			data-category-id="DIC_kwDOK2jPEc4CgTww"
			data-mapping="pathname"
			data-strict="0"
			data-reactions-enabled="1"
			data-emit-metadata="0"
			data-input-position="top"
			data-theme="preferred_color_scheme"
			data-lang="en"
			data-loading="lazy"
			crossorigin="anonymous"
			async></script>
	</div>
	<div class="not-prose fixed left-4 top-40 hidden p-4 lg:block">
		<ul class="space-y-1 text-base-content/60" id="table-of-contents">
			{
				headings.map((heading) => (
					<li style={`margin-left: ${(heading.depth - 2) * 20}px;`}>
						<a href={`#${heading.slug}`} class="text-sm hover:underline">
							{heading.text}
						</a>
					</li>
				))
			}
		</ul>
	</div>
	<!-- <progress
		id="scroll-progress"
		class="progress progress-primary fixed right-0 top-0 h-1"
		value="0"
		max="100"></progress> -->
</Layout>

<script is:inline>
	// function updateProgress() {
	// 	const winScroll = document.body.scrollTop || document.documentElement.scrollTop
	// 	const height = document.documentElement.scrollHeight - document.documentElement.clientHeight
	// 	const scrolled = (winScroll / height) * 100
	// 	document.getElementById('scroll-progress').value = scrolled
	// }

	function highlightCurrentHeading() {
		const headings = document.querySelectorAll('h2, h3, h4, h5, h6')
		const tocLinks = document.querySelectorAll('#table-of-contents a')

		let currentHeadingIndex = 0

		headings.forEach((heading, index) => {
			const rect = heading.getBoundingClientRect()
			if (rect.top <= 100) {
				currentHeadingIndex = index
			}
		})

		tocLinks.forEach((link, index) => {
			if (index === currentHeadingIndex) {
				link.classList.add('text-base-content', 'font-bold')
			} else {
				link.classList.remove('text-base-content', 'font-bold')
			}
		})
	}

	window.addEventListener('scroll', () => {
		// updateProgress()
		highlightCurrentHeading()
	})

	// updateProgress()
	highlightCurrentHeading()
</script>
