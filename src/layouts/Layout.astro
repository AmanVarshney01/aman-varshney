---
import { SEO } from 'astro-seo'
import { ViewTransitions } from 'astro:transitions'
import Footer from '@/components/Footer.astro'
import Header from '@/components/Header.astro'
import '@/styles/global.css'

type Props = {
	title: string
	description?: string
	author?: string
}

const { title, description = 'Portfolio of Aman Varshney', author = 'Aman Varshney' } = Astro.props

const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const socialImageURL = new URL('/og-image.webp', Astro.url)
---

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		<meta name="author" content={author} />
		<link rel="sitemap" href="/sitemap-index.xml" />
		<link
			rel="alternate"
			type="application/rss+xml"
			title="Aman Varshney"
			href={new URL('rss.xml', Astro.site)}
		/>
		<SEO
			title={title}
			description={description}
			canonical={canonicalURL.href}
			openGraph={{
				basic: {
					type: 'website',
					title: title,
					image: socialImageURL.href
				}
			}}
			twitter={{
				card: 'summary_large_image',
				image: socialImageURL.href,
				creator: '@amanvarshney01'
			}}
		/>
		<ViewTransitions fallback={'none'} />
	</head>
	<body
		class="prose mx-auto grid min-h-svh w-full max-w-3xl grid-rows-[auto_1fr_auto] py-5 underline-offset-4 antialiased max-lg:px-4"
	>
		<Header />
		<main class="min-w-0">
			<slot />
		</main>
		<Footer />
		<!-- Cal floating-popup embed code begins -->
		<script type="text/javascript">
			;(function (C, A, L) {
				let p = function (a, ar) {
					a.q.push(ar)
				}
				let d = C.document
				C.Cal =
					C.Cal ||
					function () {
						let cal = C.Cal
						let ar = arguments
						if (!cal.loaded) {
							cal.ns = {}
							cal.q = cal.q || []
							d.head.appendChild(d.createElement('script')).src = A
							cal.loaded = true
						}
						if (ar[0] === L) {
							const api = function () {
								p(api, arguments)
							}
							const namespace = ar[1]
							api.q = api.q || []
							if (typeof namespace === 'string') {
								cal.ns[namespace] = cal.ns[namespace] || api
								p(cal.ns[namespace], ar)
								p(cal, ['initNamespace', namespace])
							} else p(cal, ar)
							return
						}
						p(cal, ar)
					}
			})(window, 'https://app.cal.com/embed/embed.js', 'init')
			Cal('init', '15min', { origin: 'https://cal.com' })

			Cal.ns['15min']('floatingButton', {
				calLink: 'amanvarshney01/15min',
				config: { layout: 'month_view' }
			})
			Cal.ns['15min']('ui', {
				styles: { branding: { brandColor: '#000000' } },
				hideEventTypeDetails: false,
				layout: 'month_view'
			})
		</script>
		<!-- Cal floating-popup embed code ends -->
		<script is:inline>
			document.addEventListener('astro:after-swap', () => {
				const themeToggleButton = document.getElementById('theme-toggle')
				const savedTheme = localStorage.getItem('theme')

				if (savedTheme) {
					document.documentElement.setAttribute('data-theme', savedTheme)
					themeToggleButton.checked = savedTheme === 'black'
				}

				themeToggleButton?.addEventListener('change', () => {
					const newTheme = themeToggleButton.checked ? 'black' : 'lofi'
					document.documentElement.setAttribute('data-theme', newTheme)
					localStorage.setItem('theme', newTheme)
				})
			})
			const themeToggleButton = document.getElementById('theme-toggle')
			const savedTheme = localStorage.getItem('theme')

			if (savedTheme) {
				document.documentElement.setAttribute('data-theme', savedTheme)
				themeToggleButton.checked = savedTheme === 'black'
			}

			themeToggleButton?.addEventListener('change', () => {
				const newTheme = themeToggleButton.checked ? 'black' : 'lofi'
				document.documentElement.setAttribute('data-theme', newTheme)
				localStorage.setItem('theme', newTheme)
			})
		</script>
	</body>
</html>
